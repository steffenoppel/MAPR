
  
  
  model {
    #-------------------------------------------------
    # - population model for the MacGillivray's Prion population
    # - age structured model with 4 age classes 
    # - adult survival based on CMR ringing data
    # - productivity based on Prion Cave nest monitoring data
    # - TWO future scenarios to project population growth with and without eradication
    # -------------------------------------------------
    
    #-------------------------------------------------  
    # 1. PRIORS FOR ALL DATA SETS
    #-------------------------------------------------
    
    
    # -------------------------------------------------        
    # 1.1. Priors and constraints FOR FECUNDITY
    # -------------------------------------------------
    
    #mean.fec ~ dunif(0,0.5)      ## uninformative prior for CURRENT FECUNDITY
    fec.drop ~ dunif(0.2,0.3)      ## uninformative prior for DECREASE IN FECUNDITY
    orig.fec ~ dunif(0.33,0.35)         ## uninformative prior for ORIGINAL FECUNDITY
    full.fec ~ dnorm(0.519,1000) T(0.1,1)     ## prior for full fecundity without predation from Nevoux & Barbraud (2005) - very high precision
    mean.fec <- orig.fec * fec.drop
    fec.decrease <- (mean.fec-orig.fec)/(66-1)
    
    
    # -------------------------------------------------        
    # 1.2. Priors and constraints FOR SURVIVAL
    # -------------------------------------------------
    
    phi ~ dunif(0.7, 1) 
    p ~ dunif(0, 1)
    juv.surv <- juv.surv.prop*phi
    juv.surv.prop ~ dnorm(mean.juv.surv.prop,1000) T(0,1)
    
    #-------------------------------------------------  
    # 2. LIKELIHOODS AND ECOLOGICAL STATE MODEL
    #-------------------------------------------------
    
    # -------------------------------------------------        
    # 2.1. System process: female based matrix model
    # -------------------------------------------------
    for (scen in 1:2){
      
      ### INITIAL VALUES FOR COMPONENTS FOR YEAR 1 - based on stable stage distribution from previous model
      
      JUV[1,scen]<-round(Ntot.breed[1,scen]*0.5*(orig.fec))
      N1[1,scen]<-round(Ntot.breed[1,scen]*0.5*(orig.fec)*juv.surv)
      N2[1,scen]<-round(Ntot.breed[1,scen]*0.5*(orig.fec)*juv.surv*phi)
      N3[1,scen]<-round(Ntot.breed[1,scen]*0.5*(orig.fec)*juv.surv*phi*phi)
      #Ntot.breed[1,scen] ~ dunif(4000000,5000000)         # initial value of population size
      Ntot.breed[1,scen] ~ dnorm(Ntot.obs[1,scen],tau.obs[scen])         # initial value of population size
      
      for (tt in 2:66){

        ## DECREASING FECUNDITY FROM UNKNOWN ORIGINAL in 1956 to known current fecundity in 2015
        fec.proj[scen,tt]<-orig.fec + fec.decrease*tt    ## models linear decrease of fecundity
        
        ## THE PRE-BREEDERS ##
        JUV[tt,scen] ~ dbin(fec.proj[scen,tt],round(0.5 * Ntot.breed[tt,scen]))                                                               ### number of locally produced FEMALE chicks
        N1[tt,scen]  ~ dbin(juv.surv, max(2,round(JUV[tt-1,scen])))                                                    ### number of 1-year old survivors 
        N2[tt,scen] ~ dbin(phi, max(2,round(N1[tt-1,scen])))                                                      ### number of 2-year old survivors
        N3[tt,scen] ~ dbin(phi, max(2,round(N2[tt-1,scen])))                                                       ### number of 3-year old survivors
        
        ## THE BREEDERS ##
        Ntot.breed[tt,scen] ~ dbin(phi, max(2,round(N3[tt-1,scen]+Ntot.breed[tt-1,scen])))                            ### the annual number of breeding birds is the sum of old breeders and recent recruits
        
      } # tt
      
      for (tt in 67:PROJ){
        
        ## SELECT CURRENT OR RODENT FREE FECUNDITY FOR FUTURE
        fec.proj[scen,tt]<-max(mean.fec,(scen-1)*full.fec)    ## takes current fecundity for scenario 1 and full fecundity for scenario 2 
        
        ## THE PRE-BREEDERS ##
        JUV[tt,scen] ~ dbin(fec.proj[scen,tt],round(0.5 * Ntot.breed[tt,scen]))                                                                     ### need a discrete number otherwise dbin will fail, dpois must be >0
        N1[tt,scen]  ~ dbin(juv.surv, max(2,round(JUV[tt-1,scen])))                                                    ### number of 1-year old survivors 
        N2[tt,scen] ~ dbin(phi, max(2,round(N1[tt-1,scen])))                                                      ### number of 2-year old survivors
        N3[tt,scen] ~ dbin(phi, max(2,round(N2[tt-1,scen])))                                                       ### number of 3-year old survivors
        
        ## THE BREEDERS ##
        Ntot.breed[tt,scen] ~ dbin(phi, max(2,round(N3[tt-1,scen]+Ntot.breed[tt-1,scen])))                            ### the annual number of breeding birds is the sum of old breeders and recent recruits
        
      } # tt
    
    ### CONSTRAINT ON COUNT DATA IN YEAR 2000
    sigma.obs[scen] ~ dunif(200000,2000000)
    tau.obs[scen]<-pow(sigma.obs[scen],-2)
    #Ntot.obs[1,scen] ~ dnorm(Ntot.breed[1,scen],tau.obs[scen])
    Ntot.obs[2,scen] ~ dnorm(Ntot.breed[46,scen],tau.obs[scen])      
      
    } # scen    
    


    
    # -------------------------------------------------        
    # 2.2. Likelihood for fecundity: Poisson regression from the number of surveyed broods
    # -------------------------------------------------
    for (t in 1:(T.fec)){      ### T-1 or not
      J[t] ~ dpois(rho.fec[t])
      rho.fec[t] <- R[t]*mean.fec
    } #	close loop over every year in which we have fecundity data
    
    
    # -------------------------------------------------        
    # 2.3. Likelihood for adult and juvenile survival from CMR
    # -------------------------------------------------
    
    for (i in 1:nind){
      # Define latent state at first capture
      z[i,f[i]] <- 1
      
      for (t in (f[i]+1):n.occasions){
        # State process
        z[i,t] ~ dbern(mu1[i,t])
        mu1[i,t] <- phi * z[i,t-1]
        
        # Observation process
        y[i,t] ~ dbern(mu2[i,t])
        mu2[i,t] <- p * z[i,t]
      } #t
    } #i
    
    
    # -------------------------------------------------        
    # 4. DERIVED POPULATION GROWTH RATE
    # -------------------------------------------------
    
    ## DERIVED POPULATION GROWTH RATE 
    for (scen in 1:2){
      for (tt in 1:33){
        lambda[tt,scen]<-Ntot.breed[tt+67,scen]/max(1,Ntot.breed[tt+66,scen])
        loglam[tt,scen]<-log(lambda[tt,scen])
      } ## end of tt
      
      growth.rate[scen] <- exp((1/(33))*sum(loglam[1:(33),scen]))  ### geometric mean growth rate
      
    } ## end of scen
    
  }  ## END MODEL LOOP
    
    
    
    
